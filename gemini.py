from selenium import webdriver
from selenium.webdriver.common.by import By
import time
import re
import google.generativeai as genai

google_api_key = "AIzaSyBdH5XPPt8hsRl37iWpdIxRe47N4mgNz7g"

# === Class AutoAI === #
class AutoAI:
    def __init__(self, driver, model="gpt-4o"):
        self.driver = driver
        self.model = model

    def ai(self, prompt, context_html):
        max_retries = 3
        retry_count = 0
        last_error = None
        last_code = None

        while retry_count < max_retries:
            full_prompt = f"""
                B·∫°n l√† tr·ª£ l√Ω ki·ªÉm th·ª≠ t·ª± ƒë·ªông. Vi·∫øt m√£ Python d√πng Selenium WebDriver (self.driver) ƒë·ªÉ:

                - Context HTML: {context_html}
                - Y√™u c·∫ßu: {prompt}
                {f'- Code tr∆∞·ªõc ƒë√≥: {last_code}' if last_code else ''}
                {f'- L·ªói tr∆∞·ªõc ƒë√≥: {last_error}. H√£y th·ª≠ c√°ch kh√°c' if last_error else ''}

                ‚ö†Ô∏è Ch·ªâ vi·∫øt ƒëo·∫°n code thao t√°c v·ªõi element.
                Kh√¥ng ƒë∆∞·ª£c d√πng l·∫°i self.driver.get().
                Kh√¥ng ƒë∆∞·ª£c import b·∫•t k·ª≥ th∆∞ vi·ªán n√†o.
                Kh√¥ng ƒë∆∞·ª£c in k·∫øt qu·∫£. Kh√¥ng gi·∫£i th√≠ch.
                M√£ ph·∫£i d√πng self.driver v√† By t·ª´ selenium.
                Kh√¥ng d√πng try v√† except
                
                VD: 
                password_field = self.driver.find_element(By.NAME, "password")
                password_field.clear()
                password_field.send_keys("123456")
                """

            genai.configure(api_key='AIzaSyD6JXoz3D--n75o0GMCAhK7iNs6-LHsd2A')

            model = genai.GenerativeModel("gemini-2.0-flash")

            response = model.generate_content(full_prompt)
            code = response.text  # ch·ª©a m√£ tr·∫£ v·ªÅ

            code = self.clean_code_block(code)

            print(f"\n--- AI Generated Code (Attempt {retry_count + 1}/{max_retries}) ---\n{code}\n--------------------------")
            try:

                exec(code, {"self": self, "By": By, "time": time})
                return True
            except Exception as e:
                last_error = str(e)
                last_code = code
                print(f"‚ùå Error khi th·ª±c thi code (Attempt {retry_count + 1}/{max_retries}): {e}")
                retry_count += 1
                if retry_count < max_retries:
                    print(f"üîÑ Retrying... ({retry_count + 1}/{max_retries})")
                else:
                    print("‚ùå ƒê√£ h·∫øt s·ªë l·∫ßn th·ª≠ l·∫°i")
                    print("Full prompt: ", full_prompt)
                    return False

    def clean_code_block(self, code: str) -> str:
        """Lo·∫°i b·ªè ```python ... ``` trong n·ªôi dung GPT tr·∫£ v·ªÅ"""
        code = code.strip()
        code = re.sub(r"^```(python)?", "", code)
        code = re.sub(r"```$", "", code)
        return code.strip()

# === Demo ch·∫°y th·ª≠ === #
if __name__ == "__main__":
    driver = webdriver.Chrome()
    driver.maximize_window()

    auto = AutoAI(driver)

    driver.get("https://demo.growcrm.io/login")

    page_source = driver.page_source

    auto.ai(f"Nh·∫≠p username: 'admin@gmail.com'. L∆∞u √Ω tr∆∞·ªõc khi nh·∫≠p ph·∫£i clear text", page_source)
    auto.ai(f"Nh·∫≠p password: '123456'. L∆∞u √Ω tr∆∞·ªõc khi nh·∫≠p ph·∫£i clear text", page_source)
    auto.ai(f"Click b·ªè ch·ªçn checkbox Remember me", page_source)
    auto.ai(f"Click v√†o n√∫t Continue", page_source)
    time.sleep(5)
    driver.quit()
